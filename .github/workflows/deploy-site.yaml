name: ci-cd-MaxMur-Site

on:
  push:
    branches: [ main ]

jobs:
  checking_code:
    name: SAST

    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Running Horusec Security
      id: run_horusec
      uses: fike/horusec-action@v0.1
      with:
        arguments: -p="./" -e="true"

  build:
    runs-on: ubuntu-latest

    needs: [checking_code]

    steps:
      - name: Download source code
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build image
        run: |
          ansible all -i "localhost," --connection=local \
            -m template -a "src=templates/index.html.j2 dest=files/sources/index.html" \
            --extra-vars="@./inventory/production/group_vars/frontend/vars.yaml"

          docker build -t maxmur/my_site:local -f files/Dockerfiles/Nginx/Dockerfile ./files/
          docker push maxmur/my_site:local

          ansible all -i "localhost," --connection=local \
            -m template -a "src=templates/default.conf.j2 dest=files/data/nginx/default.conf" \
            --extra-vars="@./inventory/production/group_vars/frontend/vars.yaml"

          docker build -t maxmur/my_site:${{ github.sha }} -f files/Dockerfiles/Nginx/Dockerfile ./files/

      - name: Push image
        run: |
          docker push maxmur/my_site:${{ github.sha }}
          docker tag maxmur/my_site:${{ github.sha }} maxmur/my_site:latest
          docker push maxmur/my_site:latest

  oss:
    runs-on: ubuntu-latest

    needs: [build]

    steps:
      - name: Download source code
        uses: actions/checkout@v2

      - name: OSS
        run: |
          curl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh | sh -s -- -b .
          ./grype maxmur/my_site:latest

  test:
    runs-on: ubuntu-latest

    needs: [build]

    steps:
      - name: Download source code
        uses: actions/checkout@v2

      - name: Healthcheck container
        run: |
          docker network prune --force
          docker-compose -f files/docker-compose.yaml up -d
          sleep 10
          curl http://localhost

  deploy:
    runs-on: ubuntu-latest

    needs: [test]
    
    steps:
      - name: Download source code
        uses: actions/checkout@v2

      - name: Run ansible role
        run: |
          eval $(ssh-agent -s)
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          echo "${{ secrets.KEY }}" | tr -d '\r' | ssh-add -
          export ANSIBLE_HOST_KEY_CHECKING=False
          ansible-playbook -i ./inventory/production/inventory.ini \
            --extra-vars "sudo_password=${{ secrets.PROD_SUDO_PASSWORD }}" \
            ./update.yaml
